name: Build and release alpha_decoder

on:
  push:
    branches: ['master']
env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --locked --release --all-features
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: alpha_decoder_windows
          path: target/release/alpha_decoder.exe
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
      - run: cargo build --locked --release --all-features
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: alpha_decoder_macos
          path: target/release/alpha_decoder
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --locked --release --all-features
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: alpha_decoder_linux
          path: target/release/alpha_decoder
  upload-release:
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        name: Download Windows artifact
        with:
          name: alpha_decoder_windows
      - uses: actions/download-artifact@v1
        name: Download Mac artifact
        with:
          name: alpha_decoder_macos
      - uses: actions/download-artifact@v1
        name: Download Linux artifact
        with:
          name: alpha_decoder_linux
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: _Generated by GitHub Actions_
          draft: true
          prerelease: false
      - name: Upload Windows Asset
        id: upload-windows-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: alpha_decoder_windows
          asset_name: alpha_decoder_windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload macOS Asset
        id: upload-macos-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: alpha_decoder_macos
          asset_name: alpha_decoder_macos
          asset_content_type: application/octet-stream
      - name: Upload Linux Asset
        id: upload-linux-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: alpha_decoder_linux
          asset_name: alpha_decoder_linux
          asset_content_type: application/octet-stream
